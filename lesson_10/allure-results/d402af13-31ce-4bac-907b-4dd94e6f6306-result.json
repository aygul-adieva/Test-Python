{"name": "Поля ввода", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"zip-code\"]\"}\n  (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0057C1C3+27395]\n\t(No symbol) [0x00513DC4]\n\t(No symbol) [0x00411B7F]\n\t(No symbol) [0x00452C65]\n\t(No symbol) [0x00452D3B]\n\t(No symbol) [0x0048EC82]\n\t(No symbol) [0x004739E4]\n\t(No symbol) [0x0048CB24]\n\t(No symbol) [0x00473736]\n\t(No symbol) [0x00447541]\n\t(No symbol) [0x004480BD]\n\tGetHandleVerifier [0x00833A93+2876371]\n\tGetHandleVerifier [0x00887F5D+3221661]\n\tGetHandleVerifier [0x005FD634+556916]\n\tGetHandleVerifier [0x0060474C+585868]\n\t(No symbol) [0x0051CE04]\n\t(No symbol) [0x00519818]\n\t(No symbol) [0x005199B7]\n\t(No symbol) [0x0050BF0E]\n\tBaseThreadInitThunk [0x76CAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779580CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7795809E+238]", "trace": "@allure.title(\"Поля ввода\")\n    @allure.description(\"Тест проверяет, что фон незаполненного поля ввода при попытке перейти на следующую страницу красный\")\n    @allure.feature(\"CREATE\")\n    @allure.severity(\"blocker\")\n    def test_input_fields() -> None:\n        with allure.step(\"Запуск браузера Chrome, переход на страницу с полями ввода\"):\n            driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))\n            mainpage_input_fields = MainPage(driver)\n    \n        with allure.step(\"Заполнение полей ввода\"):\n            mainpage_input_fields.personal_data(\"Иван\", \"Петров\", \"Ленина, 55-3\", \"test@skypro.com\", \"+7985899998787\", \"Москва\", \"Россия\", \"QA\", \"SkyPro\")\n    \n        with allure.step(\"Проверка: фон заполненных полей зеленый, незаполненного - красный\"):\n>           assert mainpage_input_fields.get_zip_code_color() == 'rgba(248, 215, 218, 1)'\n\nPage_object\\Input_fields\\page_object_input_fields_test.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage_object\\Input_fields\\mainpage_input_fields.py:28: in get_zip_code_color\n    return self._driver.find_element(By.CSS_SELECTOR, '[name=\"zip-code\"]').value_of_css_property('background-color')\n..\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FAA3EEDF10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x779580CE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7795809E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"zip-code\"]\"}\nE         (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0057C1C3+27395]\nE       \t(No symbol) [0x00513DC4]\nE       \t(No symbol) [0x00411B7F]\nE       \t(No symbol) [0x00452C65]\nE       \t(No symbol) [0x00452D3B]\nE       \t(No symbol) [0x0048EC82]\nE       \t(No symbol) [0x004739E4]\nE       \t(No symbol) [0x0048CB24]\nE       \t(No symbol) [0x00473736]\nE       \t(No symbol) [0x00447541]\nE       \t(No symbol) [0x004480BD]\nE       \tGetHandleVerifier [0x00833A93+2876371]\nE       \tGetHandleVerifier [0x00887F5D+3221661]\nE       \tGetHandleVerifier [0x005FD634+556916]\nE       \tGetHandleVerifier [0x0060474C+585868]\nE       \t(No symbol) [0x0051CE04]\nE       \t(No symbol) [0x00519818]\nE       \t(No symbol) [0x005199B7]\nE       \t(No symbol) [0x0050BF0E]\nE       \tBaseThreadInitThunk [0x76CAFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779580CE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7795809E+238]\n\n..\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "Тест проверяет, что фон незаполненного поля ввода при попытке перейти на следующую страницу красный", "steps": [{"name": "Запуск браузера Chrome, переход на страницу с полями ввода", "status": "passed", "start": 1720789638746, "stop": 1720789649335}, {"name": "Заполнение полей ввода", "status": "passed", "start": 1720789649335, "stop": 1720789661366}, {"name": "Проверка: фон заполненных полей зеленый, незаполненного - красный", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"zip-code\"]\"}\n  (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0057C1C3+27395]\n\t(No symbol) [0x00513DC4]\n\t(No symbol) [0x00411B7F]\n\t(No symbol) [0x00452C65]\n\t(No symbol) [0x00452D3B]\n\t(No symbol) [0x0048EC82]\n\t(No symbol) [0x004739E4]\n\t(No symbol) [0x0048CB24]\n\t(No symbol) [0x00473736]\n\t(No symbol) [0x00447541]\n\t(No symbol) [0x004480BD]\n\tGetHandleVerifier [0x00833A93+2876371]\n\tGetHandleVerifier [0x00887F5D+3221661]\n\tGetHandleVerifier [0x005FD634+556916]\n\tGetHandleVerifier [0x0060474C+585868]\n\t(No symbol) [0x0051CE04]\n\t(No symbol) [0x00519818]\n\t(No symbol) [0x005199B7]\n\t(No symbol) [0x0050BF0E]\n\tBaseThreadInitThunk [0x76CAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779580CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7795809E+238]\n\n", "trace": "  File \"C:\\Users\\evgen\\Desktop\\GIT2\\Test-Python\\Lesson_10\\Page_object\\Input_fields\\page_object_input_fields_test.py\", line 25, in test_input_fields\n    assert mainpage_input_fields.get_zip_code_color() == 'rgba(248, 215, 218, 1)'\n  File \"C:\\Users\\evgen\\Desktop\\GIT2\\Test-Python\\Lesson_10\\Page_object\\Input_fields\\mainpage_input_fields.py\", line 28, in get_zip_code_color\n    return self._driver.find_element(By.CSS_SELECTOR, '[name=\"zip-code\"]').value_of_css_property('background-color')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\evgen\\Desktop\\GIT2\\Test-Python\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\evgen\\Desktop\\GIT2\\Test-Python\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\evgen\\Desktop\\GIT2\\Test-Python\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1720789661366, "stop": 1720789665413}], "start": 1720789638746, "stop": 1720789665694, "uuid": "1ea98e4b-7238-4906-9668-3deaf2900dfb", "historyId": "7602aa7db66c5e6510b7d9cbf6f914c0", "testCaseId": "7602aa7db66c5e6510b7d9cbf6f914c0", "fullName": "Page_object.Input_fields.page_object_input_fields_test#test_input_fields", "labels": [{"name": "feature", "value": "CREATE"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "Page_object.Input_fields"}, {"name": "suite", "value": "page_object_input_fields_test"}, {"name": "host", "value": "DESKTOP-KBGUDAG"}, {"name": "thread", "value": "10888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Page_object.Input_fields.page_object_input_fields_test"}]}